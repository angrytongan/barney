import{S as w,i as E,s as p,j as L,m as G,o as H,x as O,u as R,v as j}from"./vendor-656fd6d9.js";import{E as C}from"./EChart-3c628d02.js";function T(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function B(u,e,i){let{t=0}=e,{numPoints:s=100}=e,{numSeries:o=2}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];return h.push({text:"line-multi-series-simultaneously"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"value",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1}),g.forEach((y,S)=>{x.push({sourceHeader:!1,source:y.slice(0,n*y.length),encode:{x:0,y:1}}),A.push({type:"line",name:`series ${S}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:S})}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numPoints"in n&&i(4,s=n.numPoints),"numSeries"in n&&i(5,o=n.numSeries),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(s,o)),u.$$.dirty&88&&i(2,b=M(t,m,s))},[I,P,b,t,s,o,m]}class Y extends w{constructor(e){super();E(this,e,B,T,p,{t:3,numPoints:4,numSeries:5,id:0,height:1})}}function q(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function z(u,e,i){let{t=0}=e,{numPoints:s=100}=e,{numSeries:o=2}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];h.push({text:"line-multi-series-serially"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"value",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1});let y=a*g.length*n;return g.forEach((S,k)=>{y>=0&&(x.push({sourceHeader:!1,source:S.slice(0,y>=S.length?S.length:y),encode:{x:0,y:1}}),A.push({type:"line",name:`series ${k}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:k}),y-=x[x.length-1].source.length)}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numPoints"in n&&i(4,s=n.numPoints),"numSeries"in n&&i(5,o=n.numSeries),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(s,o)),u.$$.dirty&88&&i(2,b=M(t,m,s))},[I,P,b,t,s,o,m]}class Z extends w{constructor(e){super();E(this,e,z,q,p,{t:3,numPoints:4,numSeries:5,id:0,height:1})}}function D(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function F(u,e,i){let{t=0}=e,{numSeries:s=2}=e,{numPoints:o=100}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];return h.push({text:"bar-stacked-multi-series-simultaneously"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"category",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1}),g.forEach((y,S)=>{x.push({sourceHeader:!1,source:y.slice(0,n*y.length),encode:{x:0,y:1}}),A.push({type:"bar",stack:"foobar",name:`series ${S}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:S})}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numSeries"in n&&i(4,s=n.numSeries),"numPoints"in n&&i(5,o=n.numPoints),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(o,s)),u.$$.dirty&104&&i(2,b=M(t,m,o))},[I,P,b,t,s,o,m]}class v extends w{constructor(e){super();E(this,e,F,D,p,{t:3,numSeries:4,numPoints:5,id:0,height:1})}}function J(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function K(u,e,i){let{t=0}=e,{numSeries:s=2}=e,{numPoints:o=100}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];h.push({text:"bar-stacked-multi-series-serially"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"category",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1});let y=a*g.length*n;return g.forEach((S,k)=>{y>=0&&(x.push({sourceHeader:!1,source:S.slice(0,y>=S.length?S.length:y),encode:{x:0,y:1}}),A.push({type:"bar",stack:"foobar",name:`series ${k}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:k}),y-=x[x.length-1].source.length)}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numSeries"in n&&i(4,s=n.numSeries),"numPoints"in n&&i(5,o=n.numPoints),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(o,s)),u.$$.dirty&104&&i(2,b=M(t,m,o))},[I,P,b,t,s,o,m]}class $ extends w{constructor(e){super();E(this,e,K,J,p,{t:3,numSeries:4,numPoints:5,id:0,height:1})}}function N(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function Q(u,e,i){let{t=0}=e,{numPoints:s=100}=e,{numSeries:o=2}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];return h.push({text:"scatter-multi-series-simultaneously"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"value",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1}),g.forEach((y,S)=>{x.push({sourceHeader:!1,source:y.slice(0,n*y.length),encode:{x:0,y:1}}),A.push({type:"scatter",name:`series ${S}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:S})}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numPoints"in n&&i(4,s=n.numPoints),"numSeries"in n&&i(5,o=n.numSeries),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(s,o)),u.$$.dirty&88&&i(2,b=M(t,m,s))},[I,P,b,t,s,o,m]}class tt extends w{constructor(e){super();E(this,e,Q,N,p,{t:3,numPoints:4,numSeries:5,id:0,height:1})}}function U(u){let e,i;return e=new C({props:{id:u[0],option:u[2],height:u[1],notMerge:!0}}),{c(){L(e.$$.fragment)},l(t){G(e.$$.fragment,t)},m(t,s){H(e,t,s),i=!0},p(t,[s]){const o={};s&1&&(o.id=t[0]),s&4&&(o.option=t[2]),s&2&&(o.height=t[1]),e.$set(o)},i(t){i||(O(e.$$.fragment,t),i=!0)},o(t){R(e.$$.fragment,t),i=!1},d(t){j(e,t)}}}function V(u,e,i){let{t=0}=e,{numPoints:s=100}=e,{numSeries:o=2}=e,{id:I}=e,{height:P=200}=e,b={},m=[];const _=(n,g)=>{const a=[];for(let h=0;h<g;h++){const c=[];for(let r=0;r<n;r++)c.push([r,Math.random()]);a.push(c)}return a},M=(n,g,a)=>{const h=[],c=[],r=[],l=[],f=[],d=[],x=[],A=[];h.push({text:"scatter-multi-series-serially"}),c.push({}),r.push({}),l.push({containLabel:!0,top:40,left:20,right:20,bottom:20}),f.push({type:"value",gridIndex:l.length-1,max:a-1}),d.push({type:"value",gridIndex:l.length-1});let y=a*g.length*n;return g.forEach((S,k)=>{y>=0&&(x.push({sourceHeader:!1,source:S.slice(0,y>=S.length?S.length:y),encode:{x:0,y:1}}),A.push({type:"scatter",name:`series ${k}`,xAxisIndex:f.length-1,yAxisIndex:d.length-1,datasetIndex:k}),y-=x[x.length-1].source.length)}),{animation:!1,title:h,legend:c,tooltip:r,grid:l,xAxis:f,yAxis:d,series:A,dataset:x}};return u.$$set=n=>{"t"in n&&i(3,t=n.t),"numPoints"in n&&i(4,s=n.numPoints),"numSeries"in n&&i(5,o=n.numSeries),"id"in n&&i(0,I=n.id),"height"in n&&i(1,P=n.height)},u.$$.update=()=>{u.$$.dirty&48&&i(6,m=_(s,o)),u.$$.dirty&88&&i(2,b=M(t,m,s))},[I,P,b,t,s,o,m]}class et extends w{constructor(e){super();E(this,e,V,U,p,{t:3,numPoints:4,numSeries:5,id:0,height:1})}}export{Y as G,Z as a,v as b,$ as c,tt as d,et as e};
